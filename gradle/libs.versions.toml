[versions]
agp = "8.8.2"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
androidx-activityCompose = "1.10.1"
androidx-lifecycle = "2.8.4"
arkivanovDecompose = "0.8.0"
compose-multiplatform = "1.7.0"
cryptographyCore = "0.4.0"
extensionsComposeJetpackVersion = "0.8.0"
kotlin = "2.1.0"
kotlinx-coroutines = "1.10.1"
firebaseFirestoreKtx = "25.1.3"
kotlinxDatetime = "0.6.2"
navigation-compose = "2.8.0-alpha10"
extensionsComposeJetbrains = "2.2.0-alpha03"
kotlinxSerialization = "1.8.0"
foundationAndroid = "1.8.0-rc02"
animationCoreLint = "1.8.0-rc02"
material3Android = "1.3.1"
uiGraphicsAndroid = "1.8.0-rc02"
firebase-android-bom = "33.11.0"
firebaseCrashlytics = "2.1.0"
firebaseAnalytics = "22.4.0"
firebaseDatabase = "2.1.0"
uiTextAndroid = "1.8.0-rc02"
coreI18n = "1.0.0-rc01"

#Gradle
gradlePlugins-crashlytics = "3.0.3"
gradlePlugins-google-services = "4.4.2"

ktorClientJs = "3.1.2"
supabaseKt = "3.1.3"
ktor = "3.1.2"
navigationSafeArgsGenerator = "2.8.9"
uiAndroid = "1.7.8"
material3AndroidVersion = "1.3.2"

[libraries]
auth-kt = { module = "io.github.jan-tennert.supabase:auth-kt", version.ref = "supabaseKt" }
bom = { module = "io.github.jan-tennert.supabase:bom", version.ref = "supabaseKt" }
cryptography-core = { module = "dev.whyoleg.cryptography:cryptography-core", version.ref = "cryptographyCore" }
cryptography-provider-jdk = { module = "dev.whyoleg.cryptography:cryptography-provider-jdk", version.ref = "cryptographyCore" }
cryptography-provider-webcrypto = { module = "dev.whyoleg.cryptography:cryptography-provider-webcrypto", version.ref = "cryptographyCore" }
functions-kt = { module = "io.github.jan-tennert.supabase:functions-kt", version.ref = "supabaseKt" }
arkivanov-decompose-v080 = { module = "com.arkivanov.decompose:decompose", version.ref = "arkivanovDecompose" }
decompose-extensions-compose-jetpack-v080 = { module = "com.arkivanov.decompose:extensions-compose-jetpack", version.ref = "extensionsComposeJetpackVersion" }
firebase-auth = { module = "dev.gitlive:firebase-auth", version.ref = "firebaseDatabase" }
firebase-database = { module = "dev.gitlive:firebase-database", version.ref = "firebaseDatabase" }
firebase-firestore = { module = "dev.gitlive:firebase-firestore", version.ref = "firebaseDatabase" }
firebase-functions = { module = "dev.gitlive:firebase-functions", version.ref = "firebaseCrashlytics" }
firebase-messaging = { module = "dev.gitlive:firebase-messaging", version.ref = "firebaseDatabase" }
firebase-storage = { module = "dev.gitlive:firebase-storage", version.ref = "firebaseDatabase" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
firebase-firestore-ktx = { group = "com.google.firebase", name = "firebase-firestore-ktx", version.ref = "firebaseFirestoreKtx" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation-compose" }
decompose-jetbrains = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "extensionsComposeJetbrains" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
androidx-foundation-android = { group = "androidx.compose.foundation", name = "foundation-android", version.ref = "foundationAndroid" }
androidx-animation-core-lint = { group = "androidx.compose.animation", name = "animation-core-lint", version.ref = "animationCoreLint" }
androidx-material3-android = { group = "androidx.compose.material3", name = "material3-android", version.ref = "material3Android" }
androidx-ui-graphics-android = { group = "androidx.compose.ui", name = "ui-graphics-android", version.ref = "uiGraphicsAndroid" }
firebase-android-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-android-bom" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics", version.ref = "firebaseAnalytics" }
androidx-ui-text-android = { group = "androidx.compose.ui", name = "ui-text-android", version.ref = "uiTextAndroid" }
androidx-core-i18n = { group = "androidx.core", name = "core-i18n", version.ref = "coreI18n" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktorClientJs" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
realtime-kt = { module = "io.github.jan-tennert.supabase:realtime-kt", version.ref = "supabaseKt" }
storage-kt = { module = "io.github.jan-tennert.supabase:storage-kt", version.ref = "supabaseKt" }
supabase-kt = { module = "io.github.jan-tennert.supabase:supabase-kt", version.ref = "supabaseKt" }
supabase-postgrest-kt = { module = "io.github.jan-tennert.supabase:postgrest-kt", version.ref = "supabaseKt" }
ktorClientCore = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
androidx-navigation-safe-args-generator = { group = "androidx.navigation", name = "navigation-safe-args-generator", version.ref = "navigationSafeArgsGenerator" }
androidx-ui-android = { group = "androidx.compose.ui", name = "ui-android", version.ref = "uiAndroid" }
material3-android = { group = "androidx.compose.material3", name = "material3-android", version.ref = "material3AndroidVersion" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }


# plugin de serializadcion de kotlin
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

# Cosas de Google (Firebase)
crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "gradlePlugins-crashlytics" }
google-services = { id = "com.google.gms.google-services", version.ref = "gradlePlugins-google-services" }